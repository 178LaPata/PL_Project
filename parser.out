Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    WORD

Grammar

Rule 0     S' -> fds
Rule 1     fds -> fact
Rule 2     fds -> fds fact
Rule 3     fact -> INT

Terminals, with rules where they appear

INT                  : 3
WORD                 : 
error                : 

Nonterminals, with rules where they appear

fact                 : 1 2
fds                  : 2 0

Parsing method: LALR

state 0

    (0) S' -> . fds
    (1) fds -> . fact
    (2) fds -> . fds fact
    (3) fact -> . INT

    INT             shift and go to state 3

    fds                            shift and go to state 1
    fact                           shift and go to state 2

state 1

    (0) S' -> fds .
    (2) fds -> fds . fact
    (3) fact -> . INT

    INT             shift and go to state 3

    fact                           shift and go to state 4

state 2

    (1) fds -> fact .

    INT             reduce using rule 1 (fds -> fact .)
    $end            reduce using rule 1 (fds -> fact .)


state 3

    (3) fact -> INT .

    INT             reduce using rule 3 (fact -> INT .)
    $end            reduce using rule 3 (fact -> INT .)


state 4

    (2) fds -> fds fact .

    INT             reduce using rule 2 (fds -> fds fact .)
    $end            reduce using rule 2 (fds -> fds fact .)

