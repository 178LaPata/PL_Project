
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "CHAR COMMENT CR DOTQUOTE DUP EMIT INT NAME OPR SPACE SPACES WORDexp : term\n           | function\n    exp : exp termexp : exp functionterm : factfunction : ':' NAME ';'function : ':' NAME exp ';'fact : INTfact : WORDfact : OPRfact : COMMENTfact : '.'fact : DOTQUOTEfact : EMITfact : CHARfact : DUPfact : CRfact : SPACEfact : SPACES"
    
_lr_action_items = {':':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[5,5,-1,-2,-5,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-3,-4,5,-6,5,-7,]),'INT':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[6,6,-1,-2,-5,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-3,-4,6,-6,6,-7,]),'WORD':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[7,7,-1,-2,-5,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-3,-4,7,-6,7,-7,]),'OPR':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[8,8,-1,-2,-5,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-3,-4,8,-6,8,-7,]),'COMMENT':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[9,9,-1,-2,-5,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-3,-4,9,-6,9,-7,]),'.':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[10,10,-1,-2,-5,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-3,-4,10,-6,10,-7,]),'DOTQUOTE':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[11,11,-1,-2,-5,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-3,-4,11,-6,11,-7,]),'EMIT':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[12,12,-1,-2,-5,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-3,-4,12,-6,12,-7,]),'CHAR':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[13,13,-1,-2,-5,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-3,-4,13,-6,13,-7,]),'DUP':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[14,14,-1,-2,-5,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-3,-4,14,-6,14,-7,]),'CR':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[15,15,-1,-2,-5,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-3,-4,15,-6,15,-7,]),'SPACE':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[16,16,-1,-2,-5,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-3,-4,16,-6,16,-7,]),'SPACES':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[17,17,-1,-2,-5,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-3,-4,17,-6,17,-7,]),'$end':([1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,],[0,-1,-2,-5,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-3,-4,-6,-7,]),';':([2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[-1,-2,-5,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-3,-4,21,-6,23,-7,]),'NAME':([5,],[20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exp':([0,20,],[1,22,]),'term':([0,1,20,22,],[2,18,2,18,]),'function':([0,1,20,22,],[3,19,3,19,]),'fact':([0,1,20,22,],[4,4,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> term','exp',1,'p_exp1','expression_gt.py',9),
  ('exp -> function','exp',1,'p_exp1','expression_gt.py',10),
  ('exp -> exp term','exp',2,'p_exp2','expression_gt.py',15),
  ('exp -> exp function','exp',2,'p_exp3','expression_gt.py',22),
  ('term -> fact','term',1,'p_term1','expression_gt.py',30),
  ('function -> : NAME ;','function',3,'p_functions1','expression_gt.py',36),
  ('function -> : NAME exp ;','function',4,'p_functions2','expression_gt.py',46),
  ('fact -> INT','fact',1,'p_factInt','expression_gt.py',58),
  ('fact -> WORD','fact',1,'p_factWord','expression_gt.py',63),
  ('fact -> OPR','fact',1,'p_factOPR','expression_gt.py',71),
  ('fact -> COMMENT','fact',1,'p_factComment','expression_gt.py',84),
  ('fact -> .','fact',1,'p_factDOT','expression_gt.py',89),
  ('fact -> DOTQUOTE','fact',1,'p_factDOTQUOTE','expression_gt.py',93),
  ('fact -> EMIT','fact',1,'p_factEMIT','expression_gt.py',97),
  ('fact -> CHAR','fact',1,'p_factCHAR','expression_gt.py',101),
  ('fact -> DUP','fact',1,'p_factDUP','expression_gt.py',106),
  ('fact -> CR','fact',1,'p_factCR','expression_gt.py',110),
  ('fact -> SPACE','fact',1,'p_factSPACE','expression_gt.py',114),
  ('fact -> SPACES','fact',1,'p_factSPACES','expression_gt.py',119),
]
